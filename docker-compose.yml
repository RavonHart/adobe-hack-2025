version: "3.8"

services:
  # The FastAPI API Server
  api:
    build:
      context: ./backend
      target: app # This tells Docker to build the 'app' stage from the Dockerfile
    restart: always
    ports:
      - "8000:8000" # Backend API runs on 8000
    environment:
      # Environment variables for LLM and TTS providers
      - LLM_PROVIDER=${LLM_PROVIDER}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL}
      - TTS_PROVIDER=${TTS_PROVIDER}
      - AZURE_TTS_KEY=${AZURE_TTS_KEY}
      - AZURE_TTS_DEPLOYMENT=${AZURE_TTS_DEPLOYMENT}
      - AZURE_TTS_ENDPOINT=${AZURE_TTS_ENDPOINT}
      # Add any other environment variables needed by your core modules (e.g., API keys)
    volumes:
      - storage_data:/app/storage
      - db_data:/app/db
    # Ensure the backend is ready before the frontend starts trying to connect

  # The Frontend Application
  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:80" # Frontend serves on 8080
    depends_on:
      api:
        condition: service_started # Ensure backend is started before starting frontend
    restart: always

volumes:
  storage_data:
  db_data:
